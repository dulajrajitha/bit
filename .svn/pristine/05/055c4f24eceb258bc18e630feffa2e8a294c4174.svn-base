package TIMS.app.lib.hbm;
// Generated May 25, 2014 10:57:00 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TimsBarnd generated by hbm2java
 */
@Entity
@Table(name="tims_barnd"
    ,catalog="bit_project"
)
public class TimsBarnd  implements java.io.Serializable {


     private Integer code;
     private String name;
     private String description;
     private String other;
     private Set timsProducts = new HashSet(0);
     private Set timsSaleReturns = new HashSet(0);
     private Set timsPurcheses = new HashSet(0);
     private Set timsStockReturns = new HashSet(0);
     private Set timsSales = new HashSet(0);

    public TimsBarnd() {
    }

	
    public TimsBarnd(String name) {
        this.name = name;
    }
    public TimsBarnd(String name, String description, String other, Set timsProducts, Set timsSaleReturns, Set timsPurcheses, Set timsStockReturns, Set timsSales) {
       this.name = name;
       this.description = description;
       this.other = other;
       this.timsProducts = timsProducts;
       this.timsSaleReturns = timsSaleReturns;
       this.timsPurcheses = timsPurcheses;
       this.timsStockReturns = timsStockReturns;
       this.timsSales = timsSales;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="code", unique=true, nullable=false)
    public Integer getCode() {
        return this.code;
    }
    
    public void setCode(Integer code) {
        this.code = code;
    }
    
    @Column(name="name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="other", length=65535)
    public String getOther() {
        return this.other;
    }
    
    public void setOther(String other) {
        this.other = other;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="tims_product_brand", catalog="bit_project", joinColumns = { 
        @JoinColumn(name="brand_code", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="product_code", nullable=false, updatable=false) })
    public Set getTimsProducts() {
        return this.timsProducts;
    }
    
    public void setTimsProducts(Set timsProducts) {
        this.timsProducts = timsProducts;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="timsBarnd")
    public Set getTimsSaleReturns() {
        return this.timsSaleReturns;
    }
    
    public void setTimsSaleReturns(Set timsSaleReturns) {
        this.timsSaleReturns = timsSaleReturns;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="timsBarnd")
    public Set getTimsPurcheses() {
        return this.timsPurcheses;
    }
    
    public void setTimsPurcheses(Set timsPurcheses) {
        this.timsPurcheses = timsPurcheses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="timsBarnd")
    public Set getTimsStockReturns() {
        return this.timsStockReturns;
    }
    
    public void setTimsStockReturns(Set timsStockReturns) {
        this.timsStockReturns = timsStockReturns;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="timsBarnd")
    public Set getTimsSales() {
        return this.timsSales;
    }
    
    public void setTimsSales(Set timsSales) {
        this.timsSales = timsSales;
    }




}


