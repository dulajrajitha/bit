/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package TIMS.app.core.controller;

import TIMS.app.core.controller.BaseController;
import TIMS.app.core.model.MenuModel;
import TIMS.app.core.view.WelcomeView;
import TIMS.app.template.AbstractTimsTemplate;
import javax.swing.JMenuBar;

/**
 *
 * @author Nuwan Chathuranga <icechathuranga@gmail.com>
 */
public final class WelcomeController extends BaseController{
    protected static MenuModel menuModel;    
    private static WelcomeController wc;
    private static AbstractTimsTemplate template;

    public MenuModel getMenuModel() {
        if(menuModel == null){
            menuModel = new MenuModel();
        }
        return menuModel;
    }

    public void setMenuModel(MenuModel menuModel) {
        WelcomeController.menuModel = menuModel;
    }

    public AbstractTimsTemplate getTemplate() {
        if(WelcomeController.template == null){
            WelcomeController.template = this.getConfig().getMainTemplate();
        }
        return WelcomeController.template;
    }

    public static void setTemplate(AbstractTimsTemplate template) {
        WelcomeController.template = template;
    }

 

    /**
     * Singleton pattern is used
     * 
     * @return WelcomeController
     */
    public static WelcomeController getInstance(){
        if(WelcomeController.wc == null){
            WelcomeController.wc = new WelcomeController();
        }
        return WelcomeController.wc;
    }
    private WelcomeController() {
        this.setMainMenuBar();
    }
    
    protected void setMainMenuBar(){
        this.getTemplate().setMainMenuBar(this.getMenuModel().getMenuBarByMenyName("Main Menu"));
        this.getTemplate().render();
        
    }
}
