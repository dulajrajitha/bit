/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package TIMS.invoice.view.partial;

import TIMS.product.dto.ProductBarndComboItem;
import TIMS.product.dto.ProductComboItem;
import TIMS.product.model.ProductModel;

/**
 *
 * @author Nuwan Chathuranga <icechathuranga@gmail.com>
 */
public class ProductSelecter extends javax.swing.JPanel {

    private ProductModel productModel;

    public ProductModel getProductModel() {
        if (productModel == null) {
            productModel = new ProductModel();
        }
        return productModel;
    }

    public void setProductModel(ProductModel productModel) {
        this.productModel = productModel;
    }

    /**
     * Creates new form ProductSelecter
     */
    public ProductSelecter() {
        initComponents();
        loadProducts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        product = new javax.swing.JComboBox();
        brand = new javax.swing.JComboBox();
        priceText = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(600, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(product, 0, 220, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox brand;
    private javax.swing.JTextField priceText;
    private javax.swing.JComboBox product;
    // End of variables declaration//GEN-END:variables

    private void loadProducts() {
        ProductComboItem[] items = this.getProductModel().getProductsForCombo();
        for (ProductComboItem productComboItem : items) {
            product.addItem(productComboItem);
        }
        product.addActionListener(new ProductChangeListener(this));
    }

    public void setProductBrands(ProductBarndComboItem[] barndComboItems) {
        brand.removeAllItems();
        for (ProductBarndComboItem productBarndComboItem : barndComboItems) {
            brand.addItem(productBarndComboItem);
        }
        brand.addActionListener(new BrandChangeListener(this));
        if (barndComboItems.length > 0) {
            setSellingPrice(barndComboItems[0].getSellingPrice());
        }
    }

    public void setSellingPrice(Double price) {
        try {
            priceText.setText(price.toString());
        } catch (Exception e) {
            try {
                throw e;
            } catch (Exception e1) {
                e1.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
            }
        }
    }
}
